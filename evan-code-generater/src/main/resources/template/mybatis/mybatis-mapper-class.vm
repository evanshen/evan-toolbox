package ${outputor.packageName}.repository;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;

import java.util.List;

#set($className=${outputor.className})
#set($objectName=$outputor.objectName)

public interface ${className}Mapper extends BaseMapper<${className}>  {
	#*
	/***/
	${className} selectById(${outputor.pkJavaDataType} id);

	#if($outputor.pkCount == 1)
		List<${className}> selectBatchByIds(Collection<${outputor.pkJavaDataType} > ids);
	#end

	/***/
	void insert(${className} ${objectName});

	/***/
	void update(${className} ${objectName});

	/***/
	void updateStatus(@Param("id") ${outputor.pkJavaDataType} id, @Param("status") Serializable status);

    /***/
    void updateIsDeleted(@Param("id") ${outputor.pkJavaDataType} id, @Param("isDeleted") int status);

	/***/
	void delete(${outputor.pkJavaDataType} id);
	*#

	/***/
	List<${className}> queryList(${className}QueryDTO query);

	/***/
	int queryCount(${className}QueryDTO query);

	default PageResult<${className}> queryPage(${className}QueryDTO query) {
		if (query.getPageSize() == 0) {
			query.setPageSize(${className}QueryDTO.DEFAULT_PAGE_SIZE);
		}

		Page<${className}> page = PageHelper.startPage(query.getPageNo(), query.getPageSize());
		List<${className}> list = queryList(query);

		return PageResult.create(query, list, page.getTotal());
	}
}


##		int recordCount = queryCount(${objectName}QueryDTO);
##
##		PageResult<${className}> pageResult = new PageResult<>(${objectName}QueryDTO);
##		if (recordCount > 0) {
##			List<${className}> list = queryList(${objectName}QueryDTO);
##			pageResult.setData(list);
##		}
##		pageResult.setRecordCount(recordCount);

##return pageResult;

import java.io.Serializable;

import javax.persistence.Column;

public class ${outputor.className}PK implements Serializable {
	private static final long serialVersionUID = 1L;

	#foreach($column in $outputor.columnPks)
		@Column(name = "${column.columnName}")
		private $column.dataType $column.fieldName;

	#end

	public ${outputor.className}PK() {
	}

	/**
	 *
	 #foreach($column in $outputor.columnPks)
	 *@param $column.fieldName -- $column.comment
	 #end
	 */
	public ${outputor.className}PK($outputor.pkParams) {
		#foreach($column in $outputor.columnPks)
			this.$column.fieldName = $column.fieldName;
		#end
	}

	#foreach($column in $outputor.columnPks)

	/**
	 *
	 *$column.comment
	 */
	public $column.dataType get${column.fieldNameFirstCharUpcase}() {
		return $column.fieldName;
	}

	/**
	 *
	 *$column.comment
	 */
	public void set${column.fieldNameFirstCharUpcase}($column.dataType $column.fieldName) {
		this.$column.fieldName = $column.fieldName;
	}

	#end

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;

		#foreach($column in $outputor.columnPks)
			result = prime * result + ((${column.fieldName} == null) ? 0 : ${column.fieldName}.hashCode());
		#end

		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final ${outputor.className}PK other = (${outputor.className}PK) obj;

		#foreach($column in $outputor.columnPks)
			if (${column.fieldName} == null) {
    			if (other.${column.fieldName} != null){
    				return false;
    			}
    		} else if (!${column.fieldName}.equals(other.${column.fieldName})){
    			return false;
    		}
		#end

		return true;
	}
}
